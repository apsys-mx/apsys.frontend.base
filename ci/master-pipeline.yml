trigger:
    - master

pr: none

variables:
    - group: project-variables-group
    - name: projectName
      value: 'apsys.frontend.base.turkey'
    - name: packageSuffix
      value: ''
    - name: buildScript
      value: 'build:prd'
    - name: octopus.spaceName
      value: 'apsys-mx'
    - name: octopus.server
      value: 'https://apsys-fs-cloud.octopus.app'
    - name: octopus.channel
      value: 'Default'
    - name: octopus.developmentName
      value: 'Development'
    - name: octopus.testingName
      value: 'Testing'
    - template: 'templates-sonar/sonar-variables.yml'

pool:
    name: 'Default'
    vmImage: 'windows-latest'

jobs:
    - job: BuildTestsPack
      displayName: Build, test and pack
      steps:
          - checkout: self
            fetchDepth: 0
          - task: NodeTool@0
            displayName: 'Install Node.js'
            inputs:
                versionSpec: '18.x'
          - script: npm install
            displayName: 'Install packages'
          - template: 'templates-sonar/sonar-cloud-prepare.yml'
            parameters:
              sonarServiceName: ${{variables.sonarServiceName}}
              sonarProjectKey: ${{variables.sonarProjectKey}}
              sonarProjectName: ${{variables.sonarProjectName}}
              sonarCloudOrganization: ${{variables.sonarCloudOrganization}}
          - script: npm run $(buildScript)
            displayName: 'Build project'
          - template: 'templates-sonar/sonar-cloud-execute.yml'
            parameters:
              sonarServiceName: ${{variables.sonarServiceName}}
              sonarCloudOrganization: ${{variables.sonarCloudOrganization}}
          - template: 'templates-octopus/octopus-pack-push.yml'
            parameters:
              server: 'https://apsys-fs-cloud.octopus.app'
              space: 'apsys-mx'
              packageName: 'apsys.frontend.base.turkey'
              version: $(Build.BuildNumber)$(packageSuffix)

    - job: DeployApplication
      dependsOn:
          - BuildTestsPack
      displayName: Deploy to environments
      steps:
          - checkout: none
          - task: CmdLine@2
            enabled: true
            displayName: 'Create releases'
            inputs:
                script: '"ci/octo" create-release --project $(projectName) --server "$(octopus.server)" --apiKey="$(OctopusAPIKey)" --space="$(octopus.spaceName)" --channel "$(octopus.channel)" --version "$(Build.BuildNumber)$(packageSuffix)"'
          - task: CmdLine@2
            enabled: true
            displayName: 'Deploy to $(octopus.developmentName)'
            inputs:
                script: '"ci/octo" deploy-release --project $(projectName) --server "$(octopus.server)" --apiKey="$(OctopusAPIKey)" --space="$(octopus.spaceName)" --channel "$(octopus.channel)" --version "$(Build.BuildNumber)$(packageSuffix)" --deployto "$(octopus.developmentName)"  --waitForDeployment --progress'
          - task: CmdLine@2
            enabled: true
            displayName: 'Deploy to $(octopus.testingName)'
            inputs:
                script: '"ci/octo" deploy-release --project $(projectName) --server "$(octopus.server)" --apiKey="$(OctopusAPIKey)" --space="$(octopus.spaceName)" --channel "$(octopus.channel)" --version "$(Build.BuildNumber)$(packageSuffix)" --deployto "$(octopus.testingName)"  --waitForDeployment --progress'
